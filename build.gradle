plugins {
    id 'java-library'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0.78'
    id 'idea'
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = mod_version
group = mod_group_id

repositories {
    mavenCentral()
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name = "Curse Maven"
        url = uri("https://cursemaven.com")
        content {
            includeGroup("curse.maven")
        }
    }
    maven { url "https://maven.blamejared.com/" }
    maven { url 'https://maven.terraformersmc.com/' }
    flatDir { dirs 'libs' }
}

base {
    archivesName = mod_id
}
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    version = project.neo_version

    parchment {
        mappingsVersion = project.parchment_mappings_version
        minecraftVersion = project.parchment_minecraft_version
    }

    runs {
        client {
            client()

            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        server {
            server()
            programArgument '--nogui'
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        gameTestServer {
            type = "gameTestServer"
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }

        configureEach {
            systemProperty 'forge.logging.markers', 'REGISTRIES'

            logLevel = org.slf4j.event.Level.DEBUG
        }
    }

    mods {
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {
    compileOnly "mezz.jei:jei-$minecraft_version-common-api:19.21.0.247"
    compileOnly "mezz.jei:jei-$minecraft_version-neoforge-api:19.21.0.247"
    localRuntime "mezz.jei:jei-$minecraft_version-neoforge:19.21.0.247"

    compileOnly "maven.modrinth:new_world:1.7.2"

    compileOnly "maven.modrinth:the-block-box:0.1.1"

    compileOnly "maven.modrinth:farmers-delight:1.21.1-1.2.8"
    compileOnly "maven.modrinth:my-nethers-delight:1.8"

    compileOnly "maven.modrinth:malum:1.7.3.1"
    compileOnly "maven.modrinth:lodestonelib:1.7.1"
    compileOnly "maven.modrinth:curios:9.5.1+1.21.1"

    compileOnly "maven.modrinth:no-mans-land:1.3.1"
    compileOnly "com.terraformersmc:biolith-neoforge:3.0.1"
    compileOnly "maven.modrinth:mixed-litter:0.1.2"

    compileOnly "curse.maven:enderscape-536638:6738966"
    compileOnly "maven.modrinth:trimmed:1.21-3.0.0+neoforge"
    compileOnly "maven.modrinth:yacl:3.7.1+1.21.1-neoforge"

    compileOnly "curse.maven:artsandcrafts-1034791:6746626"
    compileOnly "curse.maven:jinxedlib-1203401:6727693"

    compileOnly "maven.modrinth:natures-spirit:sUhwOqbY"

    compileOnly "curse.maven:create-328085:6641610"

    compileOnly "curse.maven:biomes-o-plenty-220318:6631072"
    compileOnly "curse.maven:terrablender-neoforge-940057:6054947"
    compileOnly "curse.maven:glitchcore-955399:5660740"
}

var generateModMetadata = tasks.register("generateModMetadata", ProcessResources) {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties
    expand replaceProperties
    from "src/main/templates"
    into "build/generated/sources/modMetadata"
}
sourceSets.main.resources.srcDir generateModMetadata
neoForge.ideSyncTask generateModMetadata

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
